################################################################################
# Node-RED Stack or Compose
################################################################################
# docker stack deploy node-red --compose-file docker-compose-node-red.yml
# docker-compose -f docker-compose-node-red.yml -p myNoderedProject up
################################################################################
version: "3.7"

services:
# Login container using NodeRED
  nginx:
    restart: unless-stopped
    image: nginx:stable-alpine
    container_name: nginx
    environment:
      - TZ=Asia/Jakarta
    ports:
      - 80:80
      - 443:443
    networks:
      - kp-iot
    volumes:
      - type: bind
        source: ${PWD}/nginx/default.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: ${PWD}/node-key.pem
        target: /etc/nginx/node-key.pem
      - type: bind
        source: ${PWD}/node-cert.pem
        target: /etc/nginx/node-cert.pem
# Login container using NodeRED
  nodered-login-dev:
    restart: unless-stopped
    build:
      context: ./nodered-login-dev
    image: kp/nodered-login-dev
    container_name: nodered-login-dev
    environment:
      - TZ=Asia/Jakarta
    networks:
      - kp-iot
    volumes:
      - NodeREDLogindata:/data
      - type: bind
        source: ${PWD}/nodered-login-dev/settings.js
        target: /data/settings.js
# Dashboard container using NodeRED
  nodered-dashboard-dev:
    restart: unless-stopped
    build:
      context: ./nodered-dashboard-dev
    image: kp/nodered-dashboard-dev
    container_name: nodered-dashboard-dev
    environment:
      - TZ=Asia/Jakarta
    networks:
      - kp-iot
    volumes:
      - NodeREDdata:/data
      - type: bind
        source: ${PWD}/nodered-dashboard-dev/settings.js
        target: /data/settings.js
      - type: bind
        source: ${PWD}/node-key.pem
        target: /data/node-key.pem
      - type: bind
        source: ${PWD}/node-cert.pem
        target: /data/node-cert.pem

#MQTT container using Mosquitto
  mosquitto-broker:
    restart: unless-stopped
    image: eclipse-mosquitto
    container_name: mosquitto-broker
    environment:
      - TZ=Asia/Jakarta
    ports:
      - 8883:8883
    networks:
      - kp-iot
    volumes:
      - Mosquittodata:/mosquitto/data
      - Mosquittodata:/mosquitto/log
      - type: bind
        source: ${PWD}/mosquitto-broker/mosquitto.conf
        target: /mosquitto/config/mosquitto.conf
      - type: bind
        source: ${PWD}/ca.crt
        target: /mosquitto/config/ca.crt
      - type: bind
        source: ${PWD}/server.crt
        target: /mosquitto/config/server.crt
      - type: bind
        source: ${PWD}/server.key
        target: /mosquitto/config/server.key

#Database container using MariaDB
  mariadb:
    restart: unless-stopped
    image: mariadb
    container_name: mariadb
    environment:
      - TZ=Asia/Jakarta
      - MYSQL_ROOT_PASSWORD=@dminKPIoTDB123
      - MYSQL_USER=nodered
      - MYSQL_PASSWORD=kpiot123
      - MYSQL_DATABASE=iotData
#   expose:
#      - 3306
    ports:
      - 3306:3306
    networks:
      - kp-iot
    volumes:
      - MariaDBdata:/var/lib/mysql
#Web UI to manage database using Adminer
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - kp-iot

#List of Volume
volumes:
#Volume for Login
  NodeREDLogindata:
    external: true
    name: NodeREDLogindata

#Volume for Dashboard
  NodeREDdata:
    external: true
    name: NodeREDdata

#Volume for MQTT
  Mosquittodata:
    external: true
    name: Mosquittodata

#Volume for Database
  MariaDBdata:
    external: true
    name: MariaDBdata

#Network
networks:
  kp-iot:
